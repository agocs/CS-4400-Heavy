/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchResultsFrame.java
 *
 * Created on Dec 2, 2011, 9:33:18 PM
 */
package SubPages;

import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import java.sql.*;
import java.util.ArrayList;
import DB.*;
import java.util.List;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author roly_rf
 */
public class SearchResultsFrame extends javax.swing.JFrame {
    
    ResultSet rs = null;
    
   /*public static void main(String [] args){
       SearchResultsFrame frame  = new SearchResultsFrame();
       
       frame.pack();
       frame.setVisible(true);
   }*/
    
    
    public static String [][] getData(ResultSet rs) throws SQLException{
     
        ArrayList<String[]> results = new ArrayList<String[]>();
        
      
        while(rs.next()){
            String [] row = new String[7];
            
            for(int i=1;i<=7;i++)
                row[i-1] = rs.getString(i);
            
            results.add(row);
        }
        
        return listToArray(results);
    } 
    
    /**
     * convert a list of String[] to array
     * @param list
     * @return 
     */
    private static String[][] listToArray(List<String[]> list){
        String[][] ret = new String[list.size()][list.get(0).length];
        
        int i = 0;
        for(String[] row : list){
            ret[i] = row;
            i++;
        }
        
        return ret;
    }
    

    /** Creates new form SearchResultsFrame */
    public SearchResultsFrame(Connection conn, ResultSet rs) {
        this.rs = rs;
        //create a clickstener to respond to the press of the button inside the table. Then we 
        // can compare the label of the buttom, and from there decide what action, or what
        // sql query we want to run.
       //SearchResultsFrame frame  = new SearchResultsFrame();
      
       pack();
       setVisible(true);
        
        JButton btn = new JButton();
        btn.setText("test");
        
        System.out.println(rs);
        try {
            sampleData = getData(rs);
        } catch (SQLException ex) {
            sampleData = new Object[0][0];
            Logger.getLogger(SearchResultsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        datamodel = new javax.swing.table.DefaultTableModel(
            sampleData,
            new String [] {
                "ID", "Name", "Owner", "Cost", "In Use ?", "Distance", "Action"
            }
        );
        
        initComponents();
        
       //This ain't gonna work
       // TODO complete this method, possibly rewrite. 
       /*
        for(Resources resource : resources)
        {
            DefaultTableCellRenderer render = new DefaultTableCellRenderer();
            render.setText("ID1");
            
            mytable.getColumn("ID").setCellRenderer(render);
            
            //This may not work because it may change all references to the render object. Try it out!
            render.setText("Name");
            mytable.getColumn("Name").setCellRenderer(render);
            
            mytable.getColumn("Action").setCellRenderer(new ButtonRenderer(resource));
        }
        */
    }
    
    class ButtonRenderer extends JButton implements TableCellRenderer {

  public ButtonRenderer(Resources resource) {
    setOpaque(true);
    
    if(resource.AmIOwner((DBConnector.getInstance().authenticatedUser.getUsername())))
    {
        //Add button to delete or edit
    }
    else
    {
        //Add the button to request
    }
  }

  public Component getTableCellRendererComponent(JTable table, Object value,
      boolean isSelected, boolean hasFocus, int row, int column) {
    if (isSelected) {
      setForeground(table.getSelectionForeground());
      setBackground(table.getSelectionBackground());
    } else {
      setForeground(table.getForeground());
      setBackground(UIManager.getColor("Button.background"));
    }
    setText((value == null) ? "" : value.toString());
    return this;
  }
}
    
    public void requestResource(){
        String myIncidentId = null; 
        String myESF = null;
        String myResource_ID = null;
        
        //String query = "IF NOT ISNULL($MyIncidentId) BEGIN INSERT INTO REQUEST VALUES(" + myIncidentId + "," + myResource_ID +","+ "'REQUESTED'" + ","+GETDATE()+")" ;      
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mytable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(emergencymanagementapp.EmergencyManagementApp.class).getContext().getResourceMap(SearchResultsFrame.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(556, Short.MAX_VALUE)
                .add(jButton1)
                .add(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        mytable.setModel(datamodel);
        mytable.setName("mytable"); // NOI18N
        jScrollPane1.setViewportView(mytable);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel2))
                    .add(layout.createSequentialGroup()
                        .add(49, 49, 49)
                        .add(jLabel3))
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(jLabel1)))
                .addContainerGap(561, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabel1)
                .add(26, 26, 26)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main2(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchResultsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                //new SearchResultsFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mytable;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel datamodel;
    private Object[][] sampleData;
}
